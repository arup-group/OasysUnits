//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#nullable enable

namespace OasysUnits.NumberExtensions.NumberToMassFraction
{
    /// <summary>
    /// A number to MassFraction Extensions
    /// </summary>
    public static class NumberToMassFractionExtensions
    {
        /// <inheritdoc cref="MassFraction.FromCentigramsPerGram(OasysUnits.QuantityValue)" />
        public static MassFraction CentigramsPerGram<T>(this T value) =>
            MassFraction.FromCentigramsPerGram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromCentigramsPerKilogram(OasysUnits.QuantityValue)" />
        public static MassFraction CentigramsPerKilogram<T>(this T value) =>
            MassFraction.FromCentigramsPerKilogram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromDecagramsPerGram(OasysUnits.QuantityValue)" />
        public static MassFraction DecagramsPerGram<T>(this T value) =>
            MassFraction.FromDecagramsPerGram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromDecagramsPerKilogram(OasysUnits.QuantityValue)" />
        public static MassFraction DecagramsPerKilogram<T>(this T value) =>
            MassFraction.FromDecagramsPerKilogram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromDecigramsPerGram(OasysUnits.QuantityValue)" />
        public static MassFraction DecigramsPerGram<T>(this T value) =>
            MassFraction.FromDecigramsPerGram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromDecigramsPerKilogram(OasysUnits.QuantityValue)" />
        public static MassFraction DecigramsPerKilogram<T>(this T value) =>
            MassFraction.FromDecigramsPerKilogram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromDecimalFractions(OasysUnits.QuantityValue)" />
        public static MassFraction DecimalFractions<T>(this T value) =>
            MassFraction.FromDecimalFractions(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromGramsPerGram(OasysUnits.QuantityValue)" />
        public static MassFraction GramsPerGram<T>(this T value) =>
            MassFraction.FromGramsPerGram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromGramsPerKilogram(OasysUnits.QuantityValue)" />
        public static MassFraction GramsPerKilogram<T>(this T value) =>
            MassFraction.FromGramsPerKilogram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromHectogramsPerGram(OasysUnits.QuantityValue)" />
        public static MassFraction HectogramsPerGram<T>(this T value) =>
            MassFraction.FromHectogramsPerGram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromHectogramsPerKilogram(OasysUnits.QuantityValue)" />
        public static MassFraction HectogramsPerKilogram<T>(this T value) =>
            MassFraction.FromHectogramsPerKilogram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromKilogramsPerGram(OasysUnits.QuantityValue)" />
        public static MassFraction KilogramsPerGram<T>(this T value) =>
            MassFraction.FromKilogramsPerGram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromKilogramsPerKilogram(OasysUnits.QuantityValue)" />
        public static MassFraction KilogramsPerKilogram<T>(this T value) =>
            MassFraction.FromKilogramsPerKilogram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromMicrogramsPerGram(OasysUnits.QuantityValue)" />
        public static MassFraction MicrogramsPerGram<T>(this T value) =>
            MassFraction.FromMicrogramsPerGram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromMicrogramsPerKilogram(OasysUnits.QuantityValue)" />
        public static MassFraction MicrogramsPerKilogram<T>(this T value) =>
            MassFraction.FromMicrogramsPerKilogram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromMilligramsPerGram(OasysUnits.QuantityValue)" />
        public static MassFraction MilligramsPerGram<T>(this T value) =>
            MassFraction.FromMilligramsPerGram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromMilligramsPerKilogram(OasysUnits.QuantityValue)" />
        public static MassFraction MilligramsPerKilogram<T>(this T value) =>
            MassFraction.FromMilligramsPerKilogram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromNanogramsPerGram(OasysUnits.QuantityValue)" />
        public static MassFraction NanogramsPerGram<T>(this T value) =>
            MassFraction.FromNanogramsPerGram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromNanogramsPerKilogram(OasysUnits.QuantityValue)" />
        public static MassFraction NanogramsPerKilogram<T>(this T value) =>
            MassFraction.FromNanogramsPerKilogram(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromPartsPerBillion(OasysUnits.QuantityValue)" />
        public static MassFraction PartsPerBillion<T>(this T value) =>
            MassFraction.FromPartsPerBillion(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromPartsPerMillion(OasysUnits.QuantityValue)" />
        public static MassFraction PartsPerMillion<T>(this T value) =>
            MassFraction.FromPartsPerMillion(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromPartsPerThousand(OasysUnits.QuantityValue)" />
        public static MassFraction PartsPerThousand<T>(this T value) =>
            MassFraction.FromPartsPerThousand(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromPartsPerTrillion(OasysUnits.QuantityValue)" />
        public static MassFraction PartsPerTrillion<T>(this T value) =>
            MassFraction.FromPartsPerTrillion(Convert.ToDouble(value));

        /// <inheritdoc cref="MassFraction.FromPercent(OasysUnits.QuantityValue)" />
        public static MassFraction Percent<T>(this T value) =>
            MassFraction.FromPercent(Convert.ToDouble(value));

    }
}
