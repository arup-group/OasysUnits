//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by \generate-code.bat.
//
//     Changes to this file will be lost when the code is regenerated.
//     The build server regenerates the code before each build and a pre-build
//     step will regenerate the code on each local build.
//
//     See https://github.com/angularsen/UnitsNet/wiki/Adding-a-New-Unit for how to add or edit units.
//
//     Add CustomCode\Quantities\MyQuantity.extra.cs files to add code to generated quantities.
//     Add UnitDefinitions\MyQuantity.json and run generate-code.bat to generate new units or quantities.
//
// </auto-generated>
//------------------------------------------------------------------------------

// Licensed under MIT No Attribution, see LICENSE file at the root.
// Copyright 2013 Andreas Gullberg Larsen (andreas.larsen84@gmail.com). Maintained at https://github.com/angularsen/UnitsNet.

using System;

#nullable enable

namespace OasysUnits.NumberExtensions.NumberToMassConcentration
{
    /// <summary>
    /// A number to MassConcentration Extensions
    /// </summary>
    public static class NumberToMassConcentrationExtensions
    {
        /// <inheritdoc cref="MassConcentration.FromCentigramsPerDeciliter(OasysUnits.QuantityValue)" />
        public static MassConcentration CentigramsPerDeciliter<T>(this T value) =>
            MassConcentration.FromCentigramsPerDeciliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromCentigramsPerLiter(OasysUnits.QuantityValue)" />
        public static MassConcentration CentigramsPerLiter<T>(this T value) =>
            MassConcentration.FromCentigramsPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromCentigramsPerMicroliter(OasysUnits.QuantityValue)" />
        public static MassConcentration CentigramsPerMicroliter<T>(this T value) =>
            MassConcentration.FromCentigramsPerMicroliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromCentigramsPerMilliliter(OasysUnits.QuantityValue)" />
        public static MassConcentration CentigramsPerMilliliter<T>(this T value) =>
            MassConcentration.FromCentigramsPerMilliliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromDecigramsPerDeciliter(OasysUnits.QuantityValue)" />
        public static MassConcentration DecigramsPerDeciliter<T>(this T value) =>
            MassConcentration.FromDecigramsPerDeciliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromDecigramsPerLiter(OasysUnits.QuantityValue)" />
        public static MassConcentration DecigramsPerLiter<T>(this T value) =>
            MassConcentration.FromDecigramsPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromDecigramsPerMicroliter(OasysUnits.QuantityValue)" />
        public static MassConcentration DecigramsPerMicroliter<T>(this T value) =>
            MassConcentration.FromDecigramsPerMicroliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromDecigramsPerMilliliter(OasysUnits.QuantityValue)" />
        public static MassConcentration DecigramsPerMilliliter<T>(this T value) =>
            MassConcentration.FromDecigramsPerMilliliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromGramsPerCubicCentimeter(OasysUnits.QuantityValue)" />
        public static MassConcentration GramsPerCubicCentimeter<T>(this T value) =>
            MassConcentration.FromGramsPerCubicCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromGramsPerCubicMeter(OasysUnits.QuantityValue)" />
        public static MassConcentration GramsPerCubicMeter<T>(this T value) =>
            MassConcentration.FromGramsPerCubicMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromGramsPerCubicMillimeter(OasysUnits.QuantityValue)" />
        public static MassConcentration GramsPerCubicMillimeter<T>(this T value) =>
            MassConcentration.FromGramsPerCubicMillimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromGramsPerDeciliter(OasysUnits.QuantityValue)" />
        public static MassConcentration GramsPerDeciliter<T>(this T value) =>
            MassConcentration.FromGramsPerDeciliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromGramsPerLiter(OasysUnits.QuantityValue)" />
        public static MassConcentration GramsPerLiter<T>(this T value) =>
            MassConcentration.FromGramsPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromGramsPerMicroliter(OasysUnits.QuantityValue)" />
        public static MassConcentration GramsPerMicroliter<T>(this T value) =>
            MassConcentration.FromGramsPerMicroliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromGramsPerMilliliter(OasysUnits.QuantityValue)" />
        public static MassConcentration GramsPerMilliliter<T>(this T value) =>
            MassConcentration.FromGramsPerMilliliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromKilogramsPerCubicCentimeter(OasysUnits.QuantityValue)" />
        public static MassConcentration KilogramsPerCubicCentimeter<T>(this T value) =>
            MassConcentration.FromKilogramsPerCubicCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromKilogramsPerCubicMeter(OasysUnits.QuantityValue)" />
        public static MassConcentration KilogramsPerCubicMeter<T>(this T value) =>
            MassConcentration.FromKilogramsPerCubicMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromKilogramsPerCubicMillimeter(OasysUnits.QuantityValue)" />
        public static MassConcentration KilogramsPerCubicMillimeter<T>(this T value) =>
            MassConcentration.FromKilogramsPerCubicMillimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromKilogramsPerLiter(OasysUnits.QuantityValue)" />
        public static MassConcentration KilogramsPerLiter<T>(this T value) =>
            MassConcentration.FromKilogramsPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromKilopoundsPerCubicFoot(OasysUnits.QuantityValue)" />
        public static MassConcentration KilopoundsPerCubicFoot<T>(this T value) =>
            MassConcentration.FromKilopoundsPerCubicFoot(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromKilopoundsPerCubicInch(OasysUnits.QuantityValue)" />
        public static MassConcentration KilopoundsPerCubicInch<T>(this T value) =>
            MassConcentration.FromKilopoundsPerCubicInch(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromMicrogramsPerCubicMeter(OasysUnits.QuantityValue)" />
        public static MassConcentration MicrogramsPerCubicMeter<T>(this T value) =>
            MassConcentration.FromMicrogramsPerCubicMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromMicrogramsPerDeciliter(OasysUnits.QuantityValue)" />
        public static MassConcentration MicrogramsPerDeciliter<T>(this T value) =>
            MassConcentration.FromMicrogramsPerDeciliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromMicrogramsPerLiter(OasysUnits.QuantityValue)" />
        public static MassConcentration MicrogramsPerLiter<T>(this T value) =>
            MassConcentration.FromMicrogramsPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromMicrogramsPerMicroliter(OasysUnits.QuantityValue)" />
        public static MassConcentration MicrogramsPerMicroliter<T>(this T value) =>
            MassConcentration.FromMicrogramsPerMicroliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromMicrogramsPerMilliliter(OasysUnits.QuantityValue)" />
        public static MassConcentration MicrogramsPerMilliliter<T>(this T value) =>
            MassConcentration.FromMicrogramsPerMilliliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromMilligramsPerCubicMeter(OasysUnits.QuantityValue)" />
        public static MassConcentration MilligramsPerCubicMeter<T>(this T value) =>
            MassConcentration.FromMilligramsPerCubicMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromMilligramsPerDeciliter(OasysUnits.QuantityValue)" />
        public static MassConcentration MilligramsPerDeciliter<T>(this T value) =>
            MassConcentration.FromMilligramsPerDeciliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromMilligramsPerLiter(OasysUnits.QuantityValue)" />
        public static MassConcentration MilligramsPerLiter<T>(this T value) =>
            MassConcentration.FromMilligramsPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromMilligramsPerMicroliter(OasysUnits.QuantityValue)" />
        public static MassConcentration MilligramsPerMicroliter<T>(this T value) =>
            MassConcentration.FromMilligramsPerMicroliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromMilligramsPerMilliliter(OasysUnits.QuantityValue)" />
        public static MassConcentration MilligramsPerMilliliter<T>(this T value) =>
            MassConcentration.FromMilligramsPerMilliliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromNanogramsPerDeciliter(OasysUnits.QuantityValue)" />
        public static MassConcentration NanogramsPerDeciliter<T>(this T value) =>
            MassConcentration.FromNanogramsPerDeciliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromNanogramsPerLiter(OasysUnits.QuantityValue)" />
        public static MassConcentration NanogramsPerLiter<T>(this T value) =>
            MassConcentration.FromNanogramsPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromNanogramsPerMicroliter(OasysUnits.QuantityValue)" />
        public static MassConcentration NanogramsPerMicroliter<T>(this T value) =>
            MassConcentration.FromNanogramsPerMicroliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromNanogramsPerMilliliter(OasysUnits.QuantityValue)" />
        public static MassConcentration NanogramsPerMilliliter<T>(this T value) =>
            MassConcentration.FromNanogramsPerMilliliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromOuncesPerImperialGallon(OasysUnits.QuantityValue)" />
        public static MassConcentration OuncesPerImperialGallon<T>(this T value) =>
            MassConcentration.FromOuncesPerImperialGallon(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromOuncesPerUSGallon(OasysUnits.QuantityValue)" />
        public static MassConcentration OuncesPerUSGallon<T>(this T value) =>
            MassConcentration.FromOuncesPerUSGallon(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromPicogramsPerDeciliter(OasysUnits.QuantityValue)" />
        public static MassConcentration PicogramsPerDeciliter<T>(this T value) =>
            MassConcentration.FromPicogramsPerDeciliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromPicogramsPerLiter(OasysUnits.QuantityValue)" />
        public static MassConcentration PicogramsPerLiter<T>(this T value) =>
            MassConcentration.FromPicogramsPerLiter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromPicogramsPerMicroliter(OasysUnits.QuantityValue)" />
        public static MassConcentration PicogramsPerMicroliter<T>(this T value) =>
            MassConcentration.FromPicogramsPerMicroliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromPicogramsPerMilliliter(OasysUnits.QuantityValue)" />
        public static MassConcentration PicogramsPerMilliliter<T>(this T value) =>
            MassConcentration.FromPicogramsPerMilliliter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromPoundsPerCubicFoot(OasysUnits.QuantityValue)" />
        public static MassConcentration PoundsPerCubicFoot<T>(this T value) =>
            MassConcentration.FromPoundsPerCubicFoot(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromPoundsPerCubicInch(OasysUnits.QuantityValue)" />
        public static MassConcentration PoundsPerCubicInch<T>(this T value) =>
            MassConcentration.FromPoundsPerCubicInch(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromPoundsPerImperialGallon(OasysUnits.QuantityValue)" />
        public static MassConcentration PoundsPerImperialGallon<T>(this T value) =>
            MassConcentration.FromPoundsPerImperialGallon(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromPoundsPerUSGallon(OasysUnits.QuantityValue)" />
        public static MassConcentration PoundsPerUSGallon<T>(this T value) =>
            MassConcentration.FromPoundsPerUSGallon(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromSlugsPerCubicFoot(OasysUnits.QuantityValue)" />
        public static MassConcentration SlugsPerCubicFoot<T>(this T value) =>
            MassConcentration.FromSlugsPerCubicFoot(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromTonnesPerCubicCentimeter(OasysUnits.QuantityValue)" />
        public static MassConcentration TonnesPerCubicCentimeter<T>(this T value) =>
            MassConcentration.FromTonnesPerCubicCentimeter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromTonnesPerCubicMeter(OasysUnits.QuantityValue)" />
        public static MassConcentration TonnesPerCubicMeter<T>(this T value) =>
            MassConcentration.FromTonnesPerCubicMeter(Convert.ToDouble(value));

        /// <inheritdoc cref="MassConcentration.FromTonnesPerCubicMillimeter(OasysUnits.QuantityValue)" />
        public static MassConcentration TonnesPerCubicMillimeter<T>(this T value) =>
            MassConcentration.FromTonnesPerCubicMillimeter(Convert.ToDouble(value));

    }
}
